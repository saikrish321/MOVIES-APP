{"version":3,"sources":["redux-toolkit/movieListSlice.js","logo.svg","Components/heading.js","Components/inputelement.js","Components/movielist.js","Components/addFavourite.js","Components/removefavourite.js","Components/mainpage.js","App.js","reportWebVitals.js","redux-toolkit/store.js","index.js"],"names":["arraReq","Heading","props","className","name","InputElement","onChange","updateInputName","placeholder","localStorage","getItem","JSON","parse","console","log","initialState","movieList","inputVal","favMovieList","movieListSlice","createSlice","reducers","addMovies","state","action","payload","updateInputVal","addToFavMovieList","removeMovieFromFavList","filteredList","filter","movie","imdbID","actions","Favourite","map","index","array","src","Poster","alt","onClick","renderToFavourite","AddFavourite","class","xmlns","width","height","fill","viewBox","fillRule","d","RemoveFavourite","Mainpage","useSelector","dispatch","useDispatch","url","useEffect","axios","get","then","data","Search","catch","error","fetchMovies","e","target","value","setItem","stringify","element","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","movieListReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4aceb42b.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nimport axios from \"axios\"\nlet arraReq;\nif (localStorage.getItem(\"favo-movies-list\")) {\n    arraReq = JSON.parse(localStorage.getItem(\"favo-movies-list\"))\n    console.log(arraReq, \"in halallal\")\n} else {\n    arraReq = []\n}\n\nconst initialState = {\n    movieList: [],\n    inputVal: \"\",\n    favMovieList: arraReq,\n}\n\nexport const movieListSlice = createSlice({\n    name: 'counter',\n    initialState,\n    reducers: {\n        addMovies: (state, action) => {\n            state.movieList = action.payload\n        },\n        updateInputVal: (state, action) => {\n            state.inputVal = action.payload\n        },\n        addToFavMovieList: (state, action) => {\n            // const prevMovies = state.favMovieList\n            console.log(action.payload, \"in reducer\")\n            state.favMovieList = [...state.favMovieList, action.payload]\n        },\n        removeMovieFromFavList: (state, action) => {\n            console.log(action.payload, \"ggg\")\n            const filteredList = state.favMovieList.filter((movie) => {\n                if (movie.imdbID !== action.payload.imdbID) {\n                    return true;\n                } else {\n                    return false;\n                }\n            }\n            )\n            console.log(filteredList, \"in reducer remove\")\n            state.favMovieList = filteredList\n        }\n    },\n})\n\n// Action creators are generated for each case reducer function\nexport const { addMovies, updateInputVal, addToFavMovieList, removeMovieFromFavList } = movieListSlice.actions\n\nexport default movieListSlice.reducer\n\nexport const fetchMovies = (url) => {\n    return (dispatch) => {\n        axios.get(url)\n            .then((data) => {\n                console.log(data, \"IN fetch\")\n                if (data.data.Search) {\n                    dispatch(addMovies(data.data.Search));\n                }\n            })\n            .catch((error) => {\n                console.log(error);\n            });\n    };\n};\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","\n\nconst Heading = (props) => {\n    return (\n        <>\n            <h1 className=\"heading\">{props.name}</h1>\n        </>\n    )\n}\n\nexport default Heading","import \"./mainpage.css\"\n\nconst InputElement = (props) => {\n    return (\n        <>\n            <input className=\"inputele\" onChange={props.updateInputName} placeholder=\" Seach for movies\" />\n        </>\n\n    )\n}\n\nexport default InputElement;","import \"./mainpage.css\"\n\nconst movieList = (props) => {\n    const Favourite = props.Favourite\n    return (\n        <>\n            {props.movieList.map((movie, index, array) => {\n                return <div className=\"movie-card m-3\">\n                    <img src={movie.Poster} alt=\"movie\" className=\"movie-card\" />\n                    <div className=\"overlay d-flex flex-row align-items-center justify-content-center\" onClick={() => props.renderToFavourite(movie)}><Favourite /></div>\n                </div>\n            })}\n        </>\n    )\n}\n\nexport default movieList;","const AddFavourite = () => {\n    return (\n        <>\n            <p className=\"para\">Add to Favourites</p>\n            <span>\n                <i class=\"bi bi-heart-fill\"></i>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"red\" className=\"bi bi-heart-fill\" viewBox=\"0 0 16 16\">\n                    <path fillRule=\"evenodd\" d=\"M8 1.314C12.438-3.248 23.534 4.735 8 15-7.534 4.736 3.562-3.248 8 1.314z\" />\n                </svg>\n            </span>\n        </>\n\n    )\n}\n\nexport default AddFavourite;","\n\nconst RemoveFavourite = () => {\n    return (\n        <div className=\"d-flex flex-row justify-content-center align-items-center\">\n            <p className=\"para\">Remove from Favourites</p>\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"white\" class=\"bi bi-x-square\" viewBox=\"0 0 16 16\">\n                <path d=\"M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z\" />\n                <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\n            </svg>\n        </div>\n    )\n}\n\nexport default RemoveFavourite;","import Heading from \"./heading\"\n\nimport InputElement from \"./inputelement\"\n\nimport { useEffect } from \"react\"\n\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nimport { fetchMovies, updateInputVal, addToFavMovieList, removeMovieFromFavList } from \"../redux-toolkit/movieListSlice\"\n\nimport MovieList from './movielist'\n\nimport \"./mainpage.css\"\n\nimport AddFavourite from \"./addFavourite\"\n\nimport RemoveFavourite from \"./removefavourite\"\n\n\n\n\nconst Mainpage = () => {\n\n    const { movieList, inputVal, favMovieList } = useSelector((state) => state.movieList)\n    const dispatch = useDispatch()\n\n\n    console.log(movieList, inputVal, favMovieList, \"in main page\")\n\n    const url = `http://www.omdbapi.com/?s=${inputVal}&apikey=c5ea1517`\n    useEffect(() => {\n        dispatch(fetchMovies(url));\n    }, [inputVal]);\n\n    const updateInputName = (e) => {\n        dispatch(updateInputVal(e.target.value));\n    }\n\n    const renderToFavourite = (movie) => {\n        dispatch(addToFavMovieList(movie));\n        localStorage.setItem(\"favo-movies-list\", JSON.stringify(favMovieList))\n    }\n\n\n    const removeFromFavList = (movie) => {\n        dispatch(removeMovieFromFavList(movie));\n        const filteredList = favMovieList.filter((element) => {\n            if (element.imdbID !== movie.imdbID) {\n                return true;\n            } else {\n                return false;\n            }\n        })\n        localStorage.setItem(\"favo-movies-list\", JSON.stringify(filteredList))\n\n    }\n\n\n    return (\n        <div className=\"container-fluid main-app\">\n            <div className=\"d-flex flex-row justify-content-between align-items-center \">\n                <Heading name=\"Movies\" />\n                <InputElement updateInputName={updateInputName} />\n            </div >\n            <div className=\"row \">\n                <div className=\"d-flex flex-row justify-content-start align-items-center movie-list \">\n                    <MovieList movieList={movieList} Favourite={AddFavourite} renderToFavourite={renderToFavourite} />\n                </div>\n            </div>\n            <div className=\"d-flex flex-column align-items-start ml-4\">\n                <Heading name=\"Favourite Movies\" />\n            </div>\n            <div className=\"row \">\n                <div className=\" d-flex flex-row justify-content-start align-items-center movie-list\">\n                    <MovieList movieList={favMovieList} Favourite={RemoveFavourite} renderToFavourite={removeFromFavList} />\n                </div>\n            </div>\n\n        </div >\n    )\n}\n\n\nexport default Mainpage;","import logo from './logo.svg';\nimport './App.css';\n\nimport MainPage from \"./Components/mainpage\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit'\nimport movieListReducer from './movieListSlice'\n\nexport const store = configureStore({\n    reducer: {\n        movieList: movieListReducer,\n    },\n})\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { store } from './redux-toolkit/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}